@model NHDNUG.Data.Meeting

@{
    ViewBag.Title = "Edit Meeting";
}
<script type="text/javascript">
    setAdminNavFocus("meetingsAdmin")
</script>
<h2>@ViewBag.Title</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <div class="featured">
        @Html.EditorFor(model => model.MeetingID)
        <table style="width:100%">
            <thead>
                <tr>
                    <th></th>
                    <th style="text-align:right;">Meeting Details</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.StartDateTime)</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.StartDateTime) (1/1/1999 6:00 PM)
                        @Html.ValidationMessageFor(model => model.StartDateTime)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Duration)</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Duration, new { style = "width:20px;" }) (hours)
                        @Html.ValidationMessageFor(model => model.Duration)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Topic)</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Topic, new { style = "width:400px;" })
                        @Html.ValidationMessageFor(model => model.Topic)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Description)</td>
                    <td class="editor-field">
                        @Html.TextAreaFor(model => model.Description, new { style = "width:400px; height:60px" })
                        @Html.ValidationMessageFor(model => model.Description)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.FollowUpNotes)</td>
                    <td class="editor-field">
                        @Html.TextAreaFor(model => model.FollowUpNotes, new { style = "width:400px; height:60px" })
                        @Html.ValidationMessageFor(model => model.FollowUpNotes)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.MeetingType)</td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.MeetingType)
                        @Html.ValidationMessageFor(model => model.MeetingType) (UserGroup)
                    </td>
                </tr>
            </tbody>
        </table>
        <br />
    </div>
    <p></p>
    <div class="featured">
        @Html.EditorFor(model => model.Speaker.SpeakerID)
        <table style="width:100%">
            <thead>
                <tr>
                    <th></th>
                    <th style="text-align:right;">Speaker</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.NameFirst)</td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Speaker.NameFirst)
                        @Html.ValidationMessageFor(model => model.Speaker.NameFirst)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.NameLast)</td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Speaker.NameLast, new { style = "width:200px;" })
                        @Html.ValidationMessageFor(model => model.Speaker.NameLast)        
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.CompanyName )</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Speaker.CompanyName, new { style = "width:200px;" })
                        @Html.ValidationMessageFor(model => model.Speaker.CompanyName)        
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.Bio )</td>
                    <td class="editor-field">
                        @Html.TextAreaFor(model => model.Speaker.Bio, new { style = "width:400px; height:60px" })
                        @Html.ValidationMessageFor(model => model.Speaker.Bio)        
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.URL )</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Speaker.URL, new { style = "width:200px;" })
                        @Html.ValidationMessageFor(model => model.Speaker.URL)        
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.EmailAddress1 )</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Speaker.EmailAddress1, new { style = "width:200px;" })
                        @Html.ValidationMessageFor(model => model.Speaker.EmailAddress1)        
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.EmailAddress2)</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Speaker.EmailAddress2, new { style = "width:200px;" })
                        @Html.ValidationMessageFor(model => model.Speaker.EmailAddress2)        
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.Twitter )</td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Speaker.Twitter)
                        @Html.ValidationMessageFor(model => model.Speaker.Twitter)        
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.PhoneNumber1 )</td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Speaker.PhoneNumber1)
                        @Html.ValidationMessageFor(model => model.Speaker.PhoneNumber1)        
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Speaker.PhoneNumber2)</td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Speaker.PhoneNumber2)
                        @Html.ValidationMessageFor(model => model.Speaker.PhoneNumber2)        
                    </td>
                </tr>
            </tbody>
        </table>
        <br />
    </div>
    <p></p>
    <div class="featured">
        @Html.EditorFor(model => model.Address.AddressID)
        <table style="width:100%">
            <thead>
                <tr>
                    <th></th>
                    <th style="text-align:right;">Location</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Address.Name )</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Address.Name, new { style = "width:300px;" })
                        @Html.ValidationMessageFor(model => model.Address.Name)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Address.Street1  )</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Address.Street1, new { style = "width:300px;" })
                        @Html.ValidationMessageFor(model => model.Address.Street1)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">Room</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Address.Street2)
                        @Html.ValidationMessageFor(model => model.Address.Street2)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Address.City  )</td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Address.City)
                        @Html.ValidationMessageFor(model => model.Address.City)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Address.State  )</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Address.State, new { style = "width:50px;" })
                        @Html.ValidationMessageFor(model => model.Address.State)
                    </td>
                </tr>
                <tr>
                    <td class="editor-label">@Html.LabelFor(model => model.Address.ZipCode   )</td>
                    <td class="editor-field">
                        @Html.TextBoxFor(model => model.Address.ZipCode, new { style = "width:80px;" })
                        @Html.ValidationMessageFor(model => model.Address.ZipCode)
                    </td>
                </tr>
            </tbody>
        </table>
        <br />
    </div>
    <br />
    <p>
        <input type="submit" value="Save" class="k-button" /> | @Html.ActionLink("Back to List", "Index")
    </p>

    <script type="text/javascript">
        //$(document).ready(function () { $(".datepicker").kendoDatePicker(); });
        
        $("#sample").kendoAutoComplete({
            minLength: 3,
            dataTextField: "Name",
            dataSource: {
                type: "odata",
                serverFiltering: true,
                serverPaging: true,
                pageSize: 20,
                transport: {
                    read: "http://odata.netflix.com/Catalog/Titles"
                }
            }
        });

        $("#Address_Name").kendoAutoComplete({
            minLength: 3,
            dataTextField: "Name",
            dataSource: {
                transport: {
                    read: "../GetLocations"
                }
            },
            change: function (data) {
                //alert(data);

                            $.each(data, function (key, val) {
                    alert('Key=' + key + ' Val=' + val);

                            })
            }
        });




//        $("#CustomerLookup").autocomplete({
//            source: function (request, response) {
//                var controllerUrl = "/Orders/LookupCustomer?searchText=" + request.term + "&maxResults=10";
//                var jqxhr = $.post(controllerUrl, function () {
//                    //alert("success");
//                })
//                    .success(function (data) {
//                        //alert("success function:" + data);
//                        response($.map(data, function (item) {
//                            return {
//                                label: item.Company,
//                                value: item.Company,
//                                company: item.Company,
//                                customer_id: item.Customer_ID,
//                                name: item.Name,
//                                address1: item.Address1,
//                                address2: item.Address2,
//                                city: item.City,
//                                state: item.State,
//                                zip: item.Zip,
//                                phone: item.Phone,
//                                email: item.Email
//                            }
//                        }))
//                        //                        // Remove the disabled attributes
//                        //                        $("#Company").removeAttr("disabled");
//                        //                        $("#Customer_ID").removeAttr("disabled");
//                        //                        $("#Name").removeAttr("disabled");
//                        //                        $("#Address1").removeAttr("disabled");
//                        //                        $("#Address2").removeAttr("disabled");
//                        //                        $("#City").removeAttr("disabled");
//                        //                        $("#State").removeAttr("disabled");
//                        //                        $("#Zip").removeAttr("disabled");
//                        //                        $("#Phone").removeAttr("disabled");
//                        // Clear any existing customer id
//                        $("#Customer_ID").val("00000000-0000-0000-0000-000000000000");
//                    })
//                    .error(function (data, ajaxOptions, thrownError) {
//                        alert("error:" + thrownError);
//                    })
//            },
//            select: function (event, ui) {
//                $("#Company").val(ui.item.label);
//                $("#Customer_ID").val(ui.item.customer_id);
//                $("#Name").val(ui.item.name);
//                $("#Address1").val(ui.item.address1);
//                $("#Address2").val(ui.item.address2);
//                $("#City").val(ui.item.city);
//                $("#State").val(ui.item.state);
//                $("#Zip").val(ui.item.zip);
//                $("#Phone").val(ui.item.phone);

//                $("#ID").val(ui.item.id);
//                $("#Shipping_Company").val(ui.item.value);
//                $("#Shipping_Name").val(ui.item.name);
//                $("#Shipping_Address1").val(ui.item.address1);
//                $("#Shipping_Address2").val(ui.item.address2);
//                $("#Shipping_City").val(ui.item.city);
//                $("#Shipping_State").val(ui.item.state);
//                $("#Shipping_Zip").val(ui.item.zip);
//                $("#Shipping_Phone").val(ui.item.phone);

//                $("#Approval_Name").val(ui.item.name);
//                $("#Approval_Phone").val(ui.item.phone);
//                $("#Approval_Email").val(ui.item.email);

//            },
//            close: function () {
//                //alert("closed");
//            }
//        });
    </script>
    
}
